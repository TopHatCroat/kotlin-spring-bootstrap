buildscript {
    ext {
        kotlinVersion = '1.3.11'
        springBootVersion = '2.0.0.BUILD-SNAPSHOT'
        dockerVersion = '0.19.2'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}"
        classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:${dockerVersion}"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://dl.bintray.com/konrad-kaminski/maven" }
}

group = 'com.github.tophatcroat'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

jar {
    baseName = 'kotlin-spring-bootstrap'
    version = '0.0.1-SNAPSHOT'
}

docker {
    name "tophatcroat/${jar.baseName}"
    files jar.archivePath
    buildArgs([
            'JAR_FILE': "${jar.archiveName}",
            'DB_URL': "jdbc:postgresql://172.17.0.2:5432/postgres"
    ])
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-devtools'
    compile 'org.springframework.boot:spring-boot-starter-jdbc'
    compile 'org.springframework.boot:spring-boot-starter-web'

    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'

    compile 'com.fasterxml.jackson.module:jackson-module-kotlin'
    compile 'javax.xml.bind:jaxb-api'
    compile 'com.sun.xml.bind:jaxb-core:2.3.0'
    compile 'com.sun.xml.bind:jaxb-impl:2.3.0'
    compile 'org.jetbrains.kotlin:kotlin-reflect'
    compile 'com.google.api-client:google-api-client:1.23.0'

    compile 'org.hibernate.validator:hibernate-validator'
    compile 'org.hibernate.validator:hibernate-validator-cdi:6.0.7.Final'
    compile 'com.google.code.gson:gson'
    compile 'io.jsonwebtoken:jjwt:0.9.0'
    compile 'org.mindrot:jbcrypt:0.4'
    compile 'io.springfox:springfox-swagger2:2.8.0'
    compile 'io.springfox:springfox-swagger-ui:2.8.0'

    compile 'org.springframework.kotlin:spring-kotlin-coroutine:0.3.6'

    runtime 'com.h2database:h2'
    runtime 'org.postgresql:postgresql'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}
